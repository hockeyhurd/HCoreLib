package com.hockeyhurd.hcorelib.api.util;

import net.minecraftforge.fml.common.ModMetadata;
import net.minecraftforge.fml.common.event.FMLPreInitializationEvent;

/**
 * Utility class for injecting data into mcmod.info file.
 *
 * @author hockeyhurd
 * @version 8/23/2015.
 */
public final class McModInfoDataInjector {

	private boolean result = false;
	private final ModMetadata metadata;

	/**
	 * @param event event to initialize data injection with.
	 * @param logHelper logger to use for debugging.
	 */
	public McModInfoDataInjector(FMLPreInitializationEvent event, LogHelper logHelper) {
		if (event == null) {
			final String msg = "ERROR EVEN IS NULL AND INJECTING DATA TO MCMOD.INFO WAS ABORTED!";

			logHelper.severe(msg);
			throw new NullPointerException(msg);
		}

		metadata = event.getModMetadata();
	}

	/**
	 * Attemps to inject data into mcmod.info such that it is correct and remains 'UP to date'.
	 */
	public void injectData(boolean autogenerated, String[] authors, String modID, String version, String url, String logoFile, String description) {
		/*metadata.autogenerated = autogenerated;
		// metadata.authorList.set(0, "hockeyhurd");
		// metadata.credits = "hockeyhurd";
		metadata.modId = LibReference.MOD_NAME;
		metadata.version = LibReference.VERSION;
		metadata.name = LibReference.MOD_NAME;
		metadata.url = "http://goo.gl/nYTUfU";
		metadata.logoFile = "";
		metadata.description = "A tech mod set to be unique and progressive.";*/

		metadata.autogenerated = autogenerated;

		if (authors != null && authors.length > 0) {
			metadata.authorList.clear();
			metadata.authorList.add(authors[0]);
			final StringBuilder builder = new StringBuilder(authors[0]);

			for (int i = 1; i < authors.length; i++) {
				metadata.authorList.add(authors[i]);
				builder.append(", ");
				builder.append(authors[i]);
			}

			metadata.credits = builder.toString();
		}

		if (modID != null && modID.length() > 0) metadata.modId = modID;
		if (version != null && version.length() > 0) metadata.version = version;
		if (url != null && url.length() > 0) metadata.url = url;
		if (logoFile != null && logoFile.length() > 0) metadata.logoFile = logoFile;
		if (description != null && description.length() > 0) metadata.description = description;

		result = true;
	}

	/**
	 * @return result of metadata injection.
	 */
	public boolean getResult() {
		return result;
	}

}
